{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      task: \"\",\n      editedTask: null,\n      statuses: [\"to-do\", \"in-progress\", \"finished\"],\n      /* Status could be: 'to-do' / 'in-progress' / 'finished' */\n      tasks: [{\n        name: \"Steal bananas from the supermarket.\",\n        status: \"to-do\"\n      }, {\n        name: \"Eat 1 kg chocolate in 1 hour.\",\n        status: \"in-progress\"\n      }, {\n        name: \"Create YouTube video.\",\n        status: \"finished\"\n      }]\n    };\n  },\n  methods: {\n    /**\n     * Capitalize first character\n     */\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    /**\n     * Change status of task by index\n     */\n    changeStatus(index) {\n      let newIndex = this.statuses.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.statuses[newIndex];\n    },\n    /**\n     * Deletes task by index\n     */\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    /**\n     * Edit task\n     */\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n    /**\n     * Add / Update task\n     */\n    submitTask() {\n      if (this.task.length === 0) return;\n      /* We need to update the task */\n      if (this.editedTask != null) {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      } else {\n        /* We need to add new task */\n        this.tasks.push({\n          name: this.task,\n          status: \"todo\"\n        });\n      }\n      this.task = \"\";\n    }\n  }\n};","map":{"version":3,"mappings":";AA8DA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC;MAC9C;MACAC,KAAK,EAAE,CACL;QACER,IAAI,EAAE,qCAAqC;QAC3CS,MAAM,EAAE;MACV,CAAC,EACD;QACET,IAAI,EAAE,+BAA+B;QACrCS,MAAM,EAAE;MACV,CAAC,EACD;QACET,IAAI,EAAE,uBAAuB;QAC7BS,MAAM,EAAE;MACV,CAAC;IAEL,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;;;IAGAC,mBAAmB,CAACC,GAAG,EAAE;MACvB,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAC,GAAIF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;IACnD,CAAC;IACD;;;IAGAC,YAAY,CAACC,KAAK,EAAE;MAClB,IAAIC,QAAO,GAAI,IAAI,CAACX,QAAQ,CAACY,OAAO,CAAC,IAAI,CAACX,KAAK,CAACS,KAAK,CAAC,CAACR,MAAM,CAAC;MAC9D,IAAI,EAAES,QAAO,GAAI,CAAC,EAAEA,QAAO,GAAI,CAAC;MAChC,IAAI,CAACV,KAAK,CAACS,KAAK,CAAC,CAACR,MAAK,GAAI,IAAI,CAACF,QAAQ,CAACW,QAAQ,CAAC;IACpD,CAAC;IACD;;;IAGAE,UAAU,CAACH,KAAK,EAAE;MAChB,IAAI,CAACT,KAAK,CAACa,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD;;;IAGAK,QAAQ,CAACL,KAAK,EAAE;MACd,IAAI,CAACZ,IAAG,GAAI,IAAI,CAACG,KAAK,CAACS,KAAK,CAAC,CAACjB,IAAI;MAClC,IAAI,CAACM,UAAS,GAAIW,KAAK;IACzB,CAAC;IACD;;;IAGAM,UAAU,GAAG;MACX,IAAI,IAAI,CAAClB,IAAI,CAACmB,MAAK,KAAM,CAAC,EAAE;MAC5B;MACA,IAAI,IAAI,CAAClB,UAAS,IAAK,IAAI,EAAE;QAC3B,IAAI,CAACE,KAAK,CAAC,IAAI,CAACF,UAAU,CAAC,CAACN,IAAG,GAAI,IAAI,CAACK,IAAI;QAC5C,IAAI,CAACC,UAAS,GAAI,IAAI;MACxB,OAAO;QACL;QACA,IAAI,CAACE,KAAK,CAACiB,IAAI,CAAC;UACdzB,IAAI,EAAE,IAAI,CAACK,IAAI;UACfI,MAAM,EAAE;QACV,CAAC,CAAC;MACJ;MACA,IAAI,CAACJ,IAAG,GAAI,EAAE;IAChB;EACF;AACF,CAAC","names":["name","props","msg","String","data","task","editedTask","statuses","tasks","status","methods","capitalizeFirstChar","str","charAt","toUpperCase","slice","changeStatus","index","newIndex","indexOf","deleteTask","splice","editTask","submitTask","length","push"],"sourceRoot":"","sources":["/home/betovec/nodeprojects/pololetniprace-brixi/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"todolist\">\n    \n    <div class=\"d-flex mt-5\">\n      <input\n        type=\"text\"\n        v-model=\"task\"\n        placeholder=\"Zadejte Ãºkol...\"\n        class=\"w-100 form-control\"\n      />\n      <br>\n      <button class=\"btn btn-warning rounded-0\" @click=\"submitTask\">\n        SUBMIT\n      </button>\n    </div>\n\n    <table>\n      <thead>\n        <tr>\n          <th scope=\"col\">Task</th>\n          <th scope=\"col\" style=\"width: 120px\">Status</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(task, index) in tasks\" :key=\"index\">\n          <td>\n            <span :class=\"{ 'line-through': task.status === 'finished' }\">\n              {{ task.name }}\n            </span>\n          </td>\n          <td>\n            <span\n              class=\"pointer noselect\"\n              @click=\"changeStatus(index)\"\n              :class=\"{\n                'text-danger': task.status === 'to-do',\n                'text-success': task.status === 'finished',\n                'text-warning': task.status === 'in-progress',\n              }\"\n            >\n              {{ capitalizeFirstChar(task.status) }}\n            </span>\n          </td>\n          <td class=\"text-center\">\n            <div @click=\"deleteTask(index)\">\n              <span class=\"fa fa-trash pointer\"></span>\n            </div>\n          </td>\n          <td class=\"text-center\">\n            <div @click=\"editTask(index)\">\n              <p class=\"fa fa-pen pointer\"></p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      task: \"\",\n      editedTask: null,\n      statuses: [\"to-do\", \"in-progress\", \"finished\"],\n      /* Status could be: 'to-do' / 'in-progress' / 'finished' */\n      tasks: [\n        {\n          name: \"Steal bananas from the supermarket.\",\n          status: \"to-do\",\n        },\n        {\n          name: \"Eat 1 kg chocolate in 1 hour.\",\n          status: \"in-progress\",\n        },\n        {\n          name: \"Create YouTube video.\",\n          status: \"finished\",\n        },\n      ],\n    };\n  },\n  methods: {\n    /**\n     * Capitalize first character\n     */\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    /**\n     * Change status of task by index\n     */\n    changeStatus(index) {\n      let newIndex = this.statuses.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.statuses[newIndex];\n    },\n    /**\n     * Deletes task by index\n     */\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    /**\n     * Edit task\n     */\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n    /**\n     * Add / Update task\n     */\n    submitTask() {\n      if (this.task.length === 0) return;\n      /* We need to update the task */\n      if (this.editedTask != null) {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      } else {\n        /* We need to add new task */\n        this.tasks.push({\n          name: this.task,\n          status: \"todo\",\n        });\n      }\n      this.task = \"\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n.todolist {\n  background-color: #fff;\n}\n\ntable {\n  align-items: center;\n}\n\n.pointer {\n  cursor: pointer;\n}\n.noselect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Old versions of Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n.line-through {\n  text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
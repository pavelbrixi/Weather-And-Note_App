{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/add.svg';\nimport _imports_1 from '../assets/delete.svg';\nimport _imports_2 from '../assets/edit.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"todolist\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"todo-box\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"thead-ukol\"\n}, \"Úkol\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"thead-deledit\"\n}, \"Splněno\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"thead-deledit\"\n}, \"Smazat\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"thead-deledit\"\n}, \"Upravit\")])], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \" aloo \", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"text-center\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1\n}, null, -1 /* HOISTED */));\nconst _hoisted_11 = [_hoisted_10];\nconst _hoisted_12 = {\n  class: \"text-center\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2\n}, null, -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_14];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task = $event),\n    placeholder: \"Zadejte úkol...\",\n    class: \"todo-bar\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.task]]), _createElementVNode(\"button\", {\n    class: \"btn btn-warning rounded-0\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitTask && $options.submitTask(...args))\n  }, _hoisted_5)]), _createElementVNode(\"table\", null, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'line-through': task.status === 'finished'\n      })\n    }, _toDisplayString(task.name), 3 /* TEXT, CLASS */)]), _hoisted_7, _createElementVNode(\"td\", _hoisted_8, [_createElementVNode(\"div\", {\n      onClick: $event => $options.deleteTask(index)\n    }, _hoisted_11, 8 /* PROPS */, _hoisted_9)]), _createElementVNode(\"td\", _hoisted_12, [_createElementVNode(\"div\", {\n      onClick: $event => $options.editTask(index)\n    }, _hoisted_15, 8 /* PROPS */, _hoisted_13)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";OAUaA,UAAuB;OAyBjBC,UAA0B;OAK1BC,UAAwB;;;EAvCpCC,KAAK,EAAC;AAAU;gEACnBC,oBAAI;;EACCD,KAAK,EAAC;AAAU;gEAOjBC,oBAA6B;EAAxBC,GAAuB,EAAvBL;AAAuB;oBAA5BM,UAA6B;gEAK/BF,oBAOQ,6BANNA,oBAKK,0BAJHA,oBAA4C;EAAxCG,KAAK,EAAC,KAAK;EAACJ,KAAK,EAAC;GAAa,MAAI,gBACvCC,oBAAkD;EAA9CG,KAAK,EAAC,KAAK;EAACJ,KAAK,EAAC;GAAgB,SAAO,gBAC7CC,oBAAiD;EAA7CG,KAAK,EAAC,KAAK;EAACJ,KAAK,EAAC;GAAgB,QAAM,gBAC5CC,oBAAkD;EAA9CG,KAAK,EAAC,KAAK;EAACJ,KAAK,EAAC;GAAgB,SAAO;gEAU7CC,oBAEK,YAFD,QAEJ;;EACID,KAAK,EAAC;AAAa;;iEAEnBC,oBAAgC;EAA3BC,GAA0B,EAA1BJ;AAA0B;qBAA/BO,WAAgC;;EAGhCL,KAAK,EAAC;AAAa;;iEAEnBC,oBAA8B;EAAzBC,GAAwB,EAAxBH;AAAwB;qBAA7BO,WAA8B;;uBAvC1CC,oBA6CM,OA7CNC,UA6CM,GA5CJC,UAAI,EACJR,oBASM,OATNS,UASM,mBARJT,oBAImB;IAHjBU,IAAI,EAAC,MAAM;+DACFC,UAAI;IACbC,WAAW,EAAC,iBAAiB;IAC7Bb,KAAK,EAAC;iDAFGY,UAAI,KAGfX,oBAES;IAFDD,KAAK,EAAC,2BAA2B;IAAEc,OAAK,yCAAEC,mDAAU;oBAK9Dd,oBA+BQ,gBA9BNe,UAOQ,EACRf,oBAqBQ,mCApBNM,oBAmBKU,6BAnBuBL,WAAK,GAArBM,IAAI,EAAEC,KAAK;yBAAvBZ,oBAmBK;MAnB+Ba,GAAG,EAAED;IAAK,IAC5ClB,oBAIK,aAHHA,oBAEO;MAFAD,KAAK;QAAA,gBAAoBkB,IAAI,CAACG,MAAM;MAAA;wBACtCH,IAAI,CAACI,IAAI,2BAGhBC,UAEK,EACLtB,oBAIK,MAJLuB,UAIK,GAHHvB,oBAEM;MAFAa,OAAK,YAAEC,mBAAU,CAACI,KAAK;kDAI/BlB,oBAIK,MAJLwB,WAIK,GAHHxB,oBAEM;MAFAa,OAAK,YAAEC,iBAAQ,CAACI,KAAK","names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","src","_hoisted_4","scope","_hoisted_10","_hoisted_14","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","$data","placeholder","onClick","$options","_hoisted_6","_Fragment","task","index","key","status","name","_hoisted_7","_hoisted_8","_hoisted_12"],"sourceRoot":"","sources":["/home/betovec/nodeprojects/pololetniprace-brixi/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"todolist\">\n    <br>\n    <div class=\"todo-box\">\n      <input\n        type=\"text\"\n        v-model=\"task\"\n        placeholder=\"Zadejte úkol...\"\n        class=\"todo-bar\">\n      <button class=\"btn btn-warning rounded-0\" @click=\"submitTask\">\n        <img src=\"../assets/add.svg\">\n      </button>\n    </div>\n\n    <table>\n      <thead>\n        <tr>\n          <th scope=\"col\" class=\"thead-ukol\">Úkol</th>\n          <th scope=\"col\" class=\"thead-deledit\">Splněno</th>\n          <th scope=\"col\" class=\"thead-deledit\">Smazat</th>\n          <th scope=\"col\" class=\"thead-deledit\">Upravit</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(task, index) in tasks\" :key=\"index\">\n          <td>\n            <span :class=\"{ 'line-through': task.status === 'finished' }\">\n              {{ task.name }}\n            </span>\n          </td>\n          <td>\n            aloo \n          </td>\n          <td class=\"text-center\">\n            <div @click=\"deleteTask(index)\">\n              <img src=\"../assets/delete.svg\">\n            </div>\n          </td>\n          <td class=\"text-center\">\n            <div @click=\"editTask(index)\">\n              <img src=\"../assets/edit.svg\">\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      task: \"\",\n      editedTask: null,\n      statuses: [\"to-do\", \"in-progress\", \"finished\"],\n      \n      tasks: [\n        {\n          name: \"Dokončit projekt na WTL.\",\n          status: \"to-do\",\n        },\n        {\n          name: \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum\",\n          status: \"to-do\",\n        },\n        {\n          name: \"Jít spát dřív.\",\n          status: \"to-do\",\n        },\n      ],\n    };\n  },\n  methods: {\n    /**\n     * Capitalize first character\n     */\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    /**\n     * Change status of task by index\n     */\n    changeStatus(index) {\n      let newIndex = this.statuses.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.statuses[newIndex];\n    },\n    /**\n     * Deletes task by index\n     */\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    /**\n     * Edit task\n     */\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n    /**\n     * Add / Update task\n     */\n    submitTask() {\n      if (this.task.length === 0) return;\n      /* We need to update the task */\n      if (this.editedTask != null) {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      } else {\n        /* We need to add new task */\n        this.tasks.push({\n          name: this.task,\n          status: \"todo\",\n        });\n      }\n      this.task = \"\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n.todolist {\n  background-color: #fff;\n  min-height: 90vh;\n  padding: 25px;\n}\n\nthead {\n  padding: 15px;\n  width: 200%;\n  color: #313131;\n  font-size: 20px;\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 16px 16px 0px 0px;\n  transition: 0.4s;\n}\n\n.thead-ukol {\n  padding: 10px;\n  width: 70%;\n}\n\n.thead-deledit {\n  padding: 10px;\n  width: 5%;\n}\n\ntable {\n  width: 200vh;\n  margin: auto;\n}\n.todo-box {\n  display: flex;\n  margin-bottom: 30px;\n}\n\n.todo-box {\n  justify-content: center;\n}\n\n.todo-bar {\n  width: 50%;\n}\n.todo-box .todo-bar, button{\n  padding: 15px;\n  \n  color: #313131;\n  font-size: 20px;\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 16px 0px 0px 16px;\n  transition: 0.4s;\n}\n\nbutton {\n  border-radius: 0px 16px 16px 0px;\n  padding: 0;\n}\n\ntd {\n  padding: 10px;\n  color: #313131;\n  font-size: 20px;\n  appearance: none;\n  border:none;\n  outline: none;\n  background: none;\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  transition: 0.4s;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\",\n  style: {\n    \"max-width\": \"600px\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center mt-5\"\n}, \"My Vue Todo App\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"d-flex mt-5\"\n};\nconst _hoisted_4 = {\n  class: \"table table-bordered mt-5\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Task\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  style: {\n    \"width\": \"120px\"\n  }\n}, \"Status\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"text-center\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"text-center\"\n}, \"#\")])], -1 /* HOISTED */));\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"text-center\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"fa fa-trash pointer\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = [_hoisted_9];\nconst _hoisted_11 = {\n  class: \"text-center\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"fa fa-pen pointer\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_14 = [_hoisted_13];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Heading \"), _hoisted_2, _createCommentVNode(\" Input \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task = $event),\n    placeholder: \"Enter task\",\n    class: \"w-100 form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.task]]), _createElementVNode(\"button\", {\n    class: \"btn btn-warning rounded-0\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitTask && $options.submitTask(...args))\n  }, \" SUBMIT \")]), _createCommentVNode(\" Task table \"), _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'line-through': task.status === 'finished'\n      })\n    }, _toDisplayString(task.name), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"pointer noselect\", {\n        'text-danger': task.status === 'to-do',\n        'text-success': task.status === 'finished',\n        'text-warning': task.status === 'in-progress'\n      }]),\n      onClick: $event => $options.changeStatus(index)\n    }, _toDisplayString($options.capitalizeFirstChar(task.status)), 11 /* TEXT, CLASS, PROPS */, _hoisted_6)]), _createElementVNode(\"td\", _hoisted_7, [_createElementVNode(\"div\", {\n      onClick: $event => $options.deleteTask(index)\n    }, _hoisted_10, 8 /* PROPS */, _hoisted_8)]), _createElementVNode(\"td\", _hoisted_11, [_createElementVNode(\"div\", {\n      onClick: $event => $options.editTask(index)\n    }, _hoisted_14, 8 /* PROPS */, _hoisted_12)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC,WAAW;EAACC,KAAwB,EAAxB;IAAA;EAAA;;gEAErBC,oBAAiD;EAA7CF,KAAK,EAAC;AAAkB,GAAC,iBAAe;;EAGvCA,KAAK,EAAC;AAAa;;EAajBA,KAAK,EAAC;AAA2B;gEACtCE,oBAOQ,6BANNA,oBAKK,0BAJHA,oBAAyB;EAArBC,KAAK,EAAC;AAAK,GAAC,MAAI,gBACpBD,oBAAgD;EAA5CC,KAAK,EAAC,KAAK;EAACF,KAAoB,EAApB;IAAA;EAAA;GAAqB,QAAM,gBAC3CC,oBAA0C;EAAtCC,KAAK,EAAC,KAAK;EAACH,KAAK,EAAC;GAAc,GAAC,gBACrCE,oBAA0C;EAAtCC,KAAK,EAAC,KAAK;EAACH,KAAK,EAAC;GAAc,GAAC;;;EAuBjCA,KAAK,EAAC;AAAa;;gEAEnBE,oBAAyC;EAAnCF,KAAK,EAAC;AAAqB;qBAAjCI,UAAyC;;EAGzCJ,KAAK,EAAC;AAAa;;iEAEnBE,oBAAiC;EAA9BF,KAAK,EAAC;AAAmB;qBAA5BK,WAAiC;;uBAtD7CC,oBA4DM,OA5DNC,UA4DM,GA3DJC,gCAAgB,EAChBC,UAAiD,EAEjDD,8BAAc,EACdN,oBAUM,OAVNQ,UAUM,mBATJR,oBAKE;IAJAS,IAAI,EAAC,MAAM;+DACFC,UAAI;IACbC,WAAW,EAAC,YAAY;IACxBb,KAAK,EAAC;iDAFGY,UAAI,KAIfV,oBAES;IAFDF,KAAK,EAAC,2BAA2B;IAAEc,OAAK,yCAAEC,mDAAU;KAAE,UAE9D,KAGFP,mCAAmB,EACnBN,oBAyCQ,SAzCRc,UAyCQ,GAxCNC,UAOQ,EACRf,oBA+BQ,mCA9BNI,oBA6BKY,6BA7BuBN,WAAK,GAArBO,IAAI,EAAEC,KAAK;yBAAvBd,oBA6BK;MA7B+Be,GAAG,EAAED;IAAK,IAC5ClB,oBAIK,aAHHA,oBAEO;MAFAF,KAAK;QAAA,gBAAoBmB,IAAI,CAACG,MAAM;MAAA;wBACtCH,IAAI,CAACI,IAAI,2BAGhBrB,oBAYK,aAXHA,oBAUO;MATLF,KAAK,mBAAC,kBAAkB;uBAEiBmB,IAAI,CAACG,MAAM;wBAA8CH,IAAI,CAACG,MAAM;wBAAiDH,IAAI,CAACG,MAAM;;MADxKR,OAAK,YAAEC,qBAAY,CAACK,KAAK;wBAOvBL,4BAAmB,CAACI,IAAI,CAACG,MAAM,gDAGtCpB,oBAIK,MAJLsB,UAIK,GAHHtB,oBAEM;MAFAY,OAAK,YAAEC,mBAAU,CAACK,KAAK;kDAI/BlB,oBAIK,MAJLuB,WAIK,GAHHvB,oBAEM;MAFAY,OAAK,YAAEC,iBAAQ,CAACK,KAAK","names":["class","style","_createElementVNode","scope","_hoisted_9","_hoisted_13","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","type","$data","placeholder","onClick","$options","_hoisted_4","_hoisted_5","_Fragment","task","index","key","status","name","_hoisted_7","_hoisted_11"],"sourceRoot":"","sources":["/home/betovec/nodeprojects/pololetniprace-brixi/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"container\" style=\"max-width: 600px\">\n    <!-- Heading -->\n    <h2 class=\"text-center mt-5\">My Vue Todo App</h2>\n\n    <!-- Input -->\n    <div class=\"d-flex mt-5\">\n      <input\n        type=\"text\"\n        v-model=\"task\"\n        placeholder=\"Enter task\"\n        class=\"w-100 form-control\"\n      />\n      <button class=\"btn btn-warning rounded-0\" @click=\"submitTask\">\n        SUBMIT\n      </button>\n    </div>\n\n    <!-- Task table -->\n    <table class=\"table table-bordered mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Task</th>\n          <th scope=\"col\" style=\"width: 120px\">Status</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(task, index) in tasks\" :key=\"index\">\n          <td>\n            <span :class=\"{ 'line-through': task.status === 'finished' }\">\n              {{ task.name }}\n            </span>\n          </td>\n          <td>\n            <span\n              class=\"pointer noselect\"\n              @click=\"changeStatus(index)\"\n              :class=\"{\n                'text-danger': task.status === 'to-do',\n                'text-success': task.status === 'finished',\n                'text-warning': task.status === 'in-progress',\n              }\"\n            >\n              {{ capitalizeFirstChar(task.status) }}\n            </span>\n          </td>\n          <td class=\"text-center\">\n            <div @click=\"deleteTask(index)\">\n              <span class=\"fa fa-trash pointer\"></span>\n            </div>\n          </td>\n          <td class=\"text-center\">\n            <div @click=\"editTask(index)\">\n              <p class=\"fa fa-pen pointer\"></p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      task: \"\",\n      editedTask: null,\n      statuses: [\"to-do\", \"in-progress\", \"finished\"],\n      /* Status could be: 'to-do' / 'in-progress' / 'finished' */\n      tasks: [\n        {\n          name: \"Steal bananas from the supermarket.\",\n          status: \"to-do\",\n        },\n        {\n          name: \"Eat 1 kg chocolate in 1 hour.\",\n          status: \"in-progress\",\n        },\n        {\n          name: \"Create YouTube video.\",\n          status: \"finished\",\n        },\n      ],\n    };\n  },\n  methods: {\n    /**\n     * Capitalize first character\n     */\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    /**\n     * Change status of task by index\n     */\n    changeStatus(index) {\n      let newIndex = this.statuses.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.statuses[newIndex];\n    },\n    /**\n     * Deletes task by index\n     */\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    /**\n     * Edit task\n     */\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n    /**\n     * Add / Update task\n     */\n    submitTask() {\n      if (this.task.length === 0) return;\n      /* We need to update the task */\n      if (this.editedTask != null) {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      } else {\n        /* We need to add new task */\n        this.tasks.push({\n          name: this.task,\n          status: \"todo\",\n        });\n      }\n      this.task = \"\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n.todolist {\n  background-color: #fff;\n}\n\n.pointer {\n  cursor: pointer;\n}\n.noselect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Old versions of Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n.line-through {\n  text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}